"""create tag_assign_fail_log table

Revision ID: e3d73f4a277a
Revises: 
Create Date: 2025-04-17 01:34:47.170222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'e3d73f4a277a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tag_assign_fail_log', 'for_date',
               existing_type=mysql.DATETIME(fsp=6),
               type_=sa.Date(),
               existing_nullable=False)
    op.alter_column('tag_assign_fail_log', 'created_at',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=False,
               existing_server_default=sa.text('current_timestamp(6)'))
    op.alter_column('tag_assign_fail_log', 'updated_at',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=False,
               existing_server_default=sa.text('current_timestamp(6) ON UPDATE current_timestamp(6)'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tag_assign_fail_log', 'updated_at',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=True,
               existing_server_default=sa.text('current_timestamp(6) ON UPDATE current_timestamp(6)'))
    op.alter_column('tag_assign_fail_log', 'created_at',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=True,
               existing_server_default=sa.text('current_timestamp(6)'))
    op.alter_column('tag_assign_fail_log', 'for_date',
               existing_type=sa.Date(),
               type_=mysql.DATETIME(fsp=6),
               existing_nullable=False)
    # ### end Alembic commands ###
